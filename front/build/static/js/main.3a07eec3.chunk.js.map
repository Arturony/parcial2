{"version":3,"sources":["components/card/Card.js","services/utils.js","pages/homes-list/HomesList.js","components/card/CardRoom.js","components/TableCell/TableCell.js","components/Graph/PieGraph.js","pages/rooms-list/RoomsList.js","components/nav/Navbar.js","i18n/locales.js","i18n/messages/en-us.js","i18n/messages/es-co.js","i18n/messages/index.js","router/AppRouter.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Card","state","props","home","className","to","this","id","type","src","alt","name","address","Component","HOME_API","room","getHomes","a","fetch","then","getJSON","getHomeById","setDevices","foo","i18nConfig","locale","messages","localeEsMessagesES","onChangeLanguage","lang","localeEsMessagesEN","response","json","HomesList","useState","homes","setHomes","useEffect","navigator","onLine","data","localStorage","setItem","JSON","stringify","getItem","parse","defaultMessage","map","isActive","CardRoom","string","replace","onClick","bind","homeId","replaces","TableCell","device","z","scope","desired","value","d3","selectAll","remove","radius","Math","min","arc","innerRadius","outerRadius","svg","append","attr","colors","data_ready","d","powerUsage","pie","arcs","enter","on","event","style","pageX","pageY","select","text","i","centroid","class","createGraph","RoomsList","useParams","rooms","setRooms","devices","PieGraph","Navbar","setLanguage","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","LOCALES","hello","spaces","smart","username","password","login","logout","example","myRooms","stats","en","es","AppRouter","language","exact","path","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.3a07eec3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Card.scss\";\r\n\r\nclass Card extends Component\r\n{\r\n  state = this.props.home;\r\n  render ()\r\n  {\r\n    return (\r\n      <div className=\"card card-home\">\r\n        <Link className=\"card-home-img-link\" to={`/homes/${this.state.id}`}>\r\n          {this.state.type === \"house\" ? (\r\n            <img src=\"/home.png\" className=\"card-home-img-top\" alt=\"Icon Home\" />\r\n          ) : (\r\n            <img\r\n              src=\"/loft.png\"\r\n              className=\"card-home-img-top loft\"\r\n              alt=\"Icon Loft\"\r\n            />\r\n          )}\r\n        </Link>\r\n        <div className=\"card-home-body\">\r\n          <div className=\"card-home-body-description\">\r\n            <h5 className=\"card-home-title\">{this.state.name}</h5>\r\n            <p className=\"card-home-text\">{this.state.address}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } \r\n}\r\n\r\nexport default Card;\r\n\r\n\r\n","import localeEsMessagesES from \"../locales/es.json\";\r\nimport localeEsMessagesEN from \"../locales/en.json\";\r\n\r\nconst HOME_API = \"/api/homes\";\r\n\r\nvar room = \"\";\r\n\r\nconst getHomes = async () => {\r\n  return fetch(HOME_API).then(getJSON);\r\n};\r\n\r\nconst getHomeById = async (id) => {\r\n  return fetch(`${HOME_API}/${id}`).then(getJSON);\r\n};\r\n\r\nfunction setDevices(foo)\r\n{\r\n  room = foo;\r\n}\r\n\r\nfunction getDevices()\r\n{\r\n  return room;\r\n}\r\n\r\nlet i18nConfig = {\r\n  locale: 'es',\r\n  messages: localeEsMessagesES\r\n};\r\n\r\nfunction onChangeLanguage(lang) \r\n{\r\n  switch (lang) {\r\n      case 'es': i18nConfig.messages = localeEsMessagesES; break;\r\n      case 'en': i18nConfig.messages = localeEsMessagesEN; break;\r\n      default: i18nConfig.messages = localeEsMessagesEN; break;\r\n  }\r\n  i18nConfig.locale = lang;\r\n}\r\n\r\nfunction getI18Config()\r\n{\r\n  return i18nConfig;\r\n}\r\n\r\nconst getJSON = (response) => response.json();\r\n\r\nexport { getHomes, getHomeById, setDevices, getDevices, onChangeLanguage,  getI18Config};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./HomesList.scss\";\r\nimport Card from \"../../components/card/Card.js\";\r\nimport { getHomes } from \"../../services/utils\";\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nexport const HomesList = () => {\r\n  const [homes, setHomes] = useState([]);\r\n\r\n  function setOnline()\r\n  {\r\n    if(!navigator.onLine)\r\n    {\r\n      return \" offline\";\r\n    }\r\n    else\r\n    {\r\n      return \" online\";\r\n    }\r\n  }\r\n\r\n  useEffect(() => \r\n  {\r\n    if(!navigator.onLine){\r\n      if(localStorage.getItem(\"homes\") === null) \r\n      {\r\n          setHomes(\"Loading...\")\r\n      } \r\n      else \r\n      {\r\n          setHomes(JSON.parse(localStorage.getItem(\"homes\")));\r\n      }\r\n      \r\n    } \r\n    else \r\n    {\r\n      getHomes().then((data) => \r\n      {\r\n        setHomes(data);\r\n        localStorage.setItem(\"homes\", JSON.stringify(data));\r\n      });\r\n      \r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container home\">\r\n\r\n    <div className=\"online-tooltip\">\r\n            <FormattedMessage id=\"online\"\r\n                        defaultMessage=\"You are \"/>\r\n                        {setOnline()}\r\n          </div>\r\n      <h1>\r\n      <FormattedMessage id=\"space\"\r\n      defaultMessage=\"My Spaces\"/>\r\n      </h1>\r\n\r\n      <div className=\"row\">\r\n        {homes && homes.map((home)=> \r\n          (home.isActive===true ? (<Card home={home}/>) : (<p/>)))\r\n        }\r\n      </div>  \r\n\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./CardRoom.scss\";\r\nimport { getHomes, setDevices } from \"../../services/utils\";\r\n\r\nclass CardRoom extends Component\r\n{\r\n  state = this.props.room;\r\n\r\n  replaces(string)\r\n  {\r\n      var newStr = string.replace(/ /g, \"_\");\r\n      return newStr;\r\n  }\r\n\r\n  render ()\r\n  {\r\n    return (\r\n      <div className=\"card card-room\">\r\n          <div className=\"card-room-body\">\r\n          <div className=\"card-home-body-description\">\r\n            <h5 className=\"card-home-title\">{this.state.name}</h5>\r\n          </div>\r\n        </div>\r\n        <Link className=\"card-room-img-link\" onClick={setDevices.bind(this, this.state.name)} to={`/homes/${this.state.homeId}/${this.replaces(this.state.name)}`}>\r\n          {this.state.type === \"kitcken\" ? (\r\n            <img src=\"/kitchen.png\" className=\"card-home-img-top\" alt=\"Icon kitchen\" />\r\n          ) : (\r\n            <img\r\n              src=\"/living-room.png\"\r\n              className=\"card-home-img-top living-room\"\r\n              alt=\"Icon living room\"\r\n            />\r\n          )}\r\n        </Link> \r\n      </div>\r\n    );\r\n  } \r\n}\r\n\r\n\r\n\r\nexport default CardRoom;\r\n","import React from \"react\";\r\n\r\nimport { Component } from \"react\";\r\n\r\nclass TableCell extends Component\r\n{\r\n    state = this.props.device;\r\n    z = this.props.z;\r\n  render ()\r\n  {\r\n    return (\r\n        <tr>\r\n        <th scope=\"row\">{this.z}</th>\r\n        <td>{this.state.id}</td>\r\n        <td>{this.state.name}</td>\r\n        <td>{this.state.desired.value}</td>\r\n      </tr>\r\n    );\r\n  } \r\n}\r\n\r\nexport default TableCell;","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as d3 from \"d3\";\r\nimport \"./Pie.scss\";\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\n\r\nclass Card extends Component\r\n{\r\n  state = this.props.data;\r\n\r\n   createGraph()\r\n    {\r\n        d3.select(\"#canvas\").selectAll(\"svg\").remove();\r\n        // set the dimensions and margins of the graph\r\n        var width = 450\r\n        let height = 450\r\n        let margin = 40\r\n\r\n        // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.\r\n        var radius = Math.min(width, height) / 2 - margin\r\n        var innerRadius = 0;\r\n\r\n        var arc = d3.arc()\r\n        .innerRadius(innerRadius)\r\n        .outerRadius(radius);\r\n\r\n        // append the svg object to the div called 'my_dataviz'\r\n        var svg = d3.select(\"#canvas\")\r\n        .append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height);\r\n\r\n        // set the color scale\r\n        var colors = [\"#21094e\", \"#511281\", \"#4ca1a3\", \"#a5e1ad\"];\r\n\r\n        // Compute the position of each group on the pie:\r\n        \r\n        var pie = d3.pie()\r\n        .value(function(d) {return d.powerUsage.value; });\r\n        var data_ready = pie(this.state)\r\n\r\n        // Set up groups\r\n        var arcs = svg.selectAll(\"g.arc\")\r\n        .data(data_ready)\r\n        .enter()\r\n        .append(\"g\")\r\n        .attr(\"class\", \"arc\")\r\n        .attr(\"transform\", \"translate(\" + radius + \",\" + radius + \")\")\r\n        .on(\"mouseover\", function (event, d) {\r\n        d3.select(\"#tooltip\")\r\n            .style(\"left\", event.pageX + \"px\")\r\n            .style(\"top\", event.pageY + \"px\")\r\n            .style(\"opacity\", 1)\r\n            .select(\"#value\")\r\n            .text(d.data.name + \" : \" + d.value+\"KwH\");\r\n        })\r\n        .on(\"mouseout\", function () {\r\n        // Hide the tooltip\r\n        d3.select(\"#tooltip\")\r\n            .style(\"opacity\", 0);;\r\n        });\r\n\r\n        // Draw arc paths\r\n        arcs.append(\"path\")\r\n        .attr('fill', function(d, i) \r\n        { \r\n            return colors[i]; \r\n          })\r\n        .attr(\"d\", arc);\r\n\r\n        // Labels\r\n        arcs.append(\"text\")\r\n        .attr(\"transform\", function (d) {\r\n        return \"translate(\" + arc.centroid(d) + \")\";\r\n        })\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .text(/*function (d) {\r\n        return d.value + \" \" + d.data.name;\r\n        }*/);\r\n    };\r\n\r\n  render ()\r\n  {\r\n    return (\r\n        <div>\r\n            <div id=\"canvas\" className=\"row\">\r\n                <div id=\"tooltip\" class=\"hidden\" className=\"tooltip\">\r\n                        <FormattedMessage id=\"room\"\r\n                            defaultMessage=\"Energy Consumption\"/>\r\n                        <p><span id=\"value\">100</span></p>\r\n                </div>\r\n                    \r\n                {this.createGraph()}\r\n            </div>\r\n        </div>\r\n    );\r\n  } \r\n}\r\n\r\nexport default Card;","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from 'react-router-dom'\r\nimport \"./RoomsList.scss\";\r\nimport CardRoom from \"../../components/card/CardRoom.js\";\r\nimport TableCell from \"../../components/TableCell/TableCell.js\";\r\nimport PieGraph from \"../../components/Graph/PieGraph\";\r\nimport { getHomeById, getDevices} from \"../../services/utils\";\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nexport const RoomsList = () => \r\n{\r\n    const {id} = useParams();\r\n    var z = 0;\r\n    const [rooms, setRooms] = useState([]);\r\n\r\n    function setOnline()\r\n  {\r\n    if(!navigator.onLine)\r\n    {\r\n      return \" offline\";\r\n    }\r\n    else\r\n    {\r\n      return \" online\";\r\n    }\r\n  }\r\n\r\n  useEffect(() => { \r\n    if(!navigator.onLine)\r\n        {\r\n          if(localStorage.getItem(\"rooms\" + id) === null) \r\n          {\r\n            setRooms(\"Loading...\")\r\n          } \r\n          else \r\n          {\r\n            setRooms(JSON.parse(localStorage.getItem(\"rooms\" + id)));\r\n          }\r\n\r\n        } \r\n        else \r\n        {\r\n          getHomeById(id).then((data) => \r\n          {\r\n              setRooms(data);\r\n              localStorage.setItem(\"rooms\" + id, JSON.stringify(data));\r\n          });\r\n\r\n        } \r\n  }, []);  \r\n\r\n  return (\r\n    <div className=\"container home\">\r\n\r\n      <div className=\"online-tooltip\">\r\n        <FormattedMessage id=\"online\"\r\n                    defaultMessage=\"You are \"/>\r\n                    {setOnline()}\r\n      </div>\r\n\r\n      <h1>\r\n      <FormattedMessage id=\"room\"\r\n      defaultMessage=\"My Rooms\"/>\r\n      </h1>\r\n      \r\n      <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n                <div className=\"row\">\r\n                    {rooms.rooms && rooms.rooms.map((room)=> \r\n                    (<CardRoom room={room}/>)\r\n                    )}\r\n                </div>      \r\n            </div>  \r\n            <div className=\"col-md-6\">\r\n                <table class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\"><FormattedMessage id=\"device\"\r\n                        defaultMessage=\"Device\"/></th>\r\n                        <th scope=\"col\"><FormattedMessage id=\"value\"\r\n                        defaultMessage=\"Value\"/></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {rooms.rooms && rooms.rooms.map((room)=> room.devices.map((device) => \r\n                    ( room.name ===  getDevices() ?\r\n                        (<TableCell device={device} z={z++}/>): (null)))\r\n                    )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n      </div>\r\n\r\n      <h2> <FormattedMessage id=\"room\"\r\n                    defaultMessage=\"Power Usage (KwH) - Today\"/> </h2>\r\n      <div id=\"canvas\">   \r\n        {rooms.rooms && <PieGraph data={rooms.rooms}/>}\r\n      </div>\r\n\r\n\r\n      \r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navbar.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport {onChangeLanguage} from \"../../services/utils\";\r\n\r\nexport const Navbar = ({ setLanguage }) => \r\n{\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          <FormattedMessage id=\"smart\" \r\n          defaultMessage=\"Smart House\"/>\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarNavAltMarkup\"\r\n          aria-controls=\"navbarNavAltMarkup\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n          <div className=\"navbar-nav\">\r\n            <div className=\"navbar-nav-links\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/homes\">\r\n                <FormattedMessage id=\"spaces\"\r\n                defaultMessage=\"My Spaces\" />\r\n              </Link>\r\n            </div>\r\n            <div className=\"navbar-nav-controls\">\r\n             {/** here lang selector */  }\r\n             <div>\r\n              <button onClick={() => onChangeLanguage('es')}><FormattedMessage id=\"spanish\"\r\n              defaultMessage=\"Spanish\"/></button>\r\n              <button onClick={() => onChangeLanguage('en')}><FormattedMessage id=\"english\"\r\n              defaultMessage=\"English\"/></button>\r\n            </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","export const LOCALES = {\r\n  ENGLISH: \"en-us\",\r\n  SPANISH: \"es-co\",\r\n};\r\n","import { LOCALES } from \"../locales\";\r\n\r\nexport default {\r\n  [LOCALES.ENGLISH]: {\r\n    hello: \"Hello\",\r\n    homes: \"Homes\",\r\n    spaces: \"My spaces\",\r\n    smart: \"Smart Home\",\r\n    username: \"Username\",\r\n    password: \"Password\",\r\n    login: \"Login\",\r\n    logout: \"Logout\",\r\n    example: \"You have {money} million\",\r\n    myRooms: \"My rooms\",\r\n    stats: \"Stats\",\r\n  },\r\n};\r\n","import { LOCALES } from \"../locales\";\r\n\r\nexport default {\r\n  [LOCALES.SPANISH]: {\r\n    hello: \"Hola\",\r\n    homes: \"Casas\",\r\n    spaces: \"Mis espacios\",\r\n    smart: \"Smart Home\",\r\n    username: \"Usuario\",\r\n    password: \"Contraseña\",\r\n    login: \"Entrar\",\r\n    logout: \"Salir\",\r\n    example:\r\n      \"Tu tienes {money, plural, =0 { nada} one {# un millón} other {# millones}}\",\r\n    myRooms: \"Mis habitaciones\",\r\n    stats: \"Estadísticas\",\r\n  },\r\n};\r\n","import en from \"./en-us\";\r\nimport es from \"./es-co\";\r\n\r\nexport default {\r\n  ...en,\r\n  ...es,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { HomesList } from \"../pages/homes-list/HomesList\";\r\nimport { RoomsList } from \"../pages/rooms-list/RoomsList\";\r\nimport { Navbar } from \"../components/nav/Navbar\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { LOCALES } from \"../i18n/locales\";\r\nimport messages from \"../i18n/messages\";\r\n\r\nexport const AppRouter = () => {\r\n  const [language, setLanguage] = useState(LOCALES.ENGLISH);\r\n\r\n  return (\r\n    <IntlProvider locale={language} messages={messages[language]}>\r\n      <Router>\r\n        <Navbar setLanguage={setLanguage}></Navbar>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <HomesList />\r\n          </Route>\r\n          <Route exact path=\"/homes\">\r\n            <HomesList />\r\n          </Route>\r\n          <Route path=\"/homes/:id\">\r\n            <RoomsList />\r\n          </Route>\r\n          <Route path=\"/homes/:id/:cuarto\">\r\n            <RoomsList />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </IntlProvider>\r\n  );\r\n};\r\n","import \"./App.scss\";\r\nimport React from \"react\";\r\nimport { AppRouter } from \"./router/AppRouter\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <main>\r\n        <AppRouter />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/custom.scss\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport {IntlProvider} from 'react-intl';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport {getI18Config} from \"./services/utils\";\r\nimport localeEsMessagesES from \"./locales/es.json\";\r\nimport localeEsMessagesEN from \"./locales/en.json\";\r\n\r\nvar i18nConfig = \r\n{\r\n    locale: 'es',\r\n    messages: localeEsMessagesES\r\n  };\r\n\r\nReactDOM.render(<IntlProvider locale=\"es\" messages= {localeEsMessagesES}>\r\n        <App />\r\n        <script src=\"https://d3js.org/d3.v4.js\"></script>\r\n    </IntlProvider> , document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\nserviceWorkerRegistration.register();\r\n\r\n"],"sourceRoot":""}